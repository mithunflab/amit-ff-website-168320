<think>
Alright, I need to create a production-ready styles/main.css file for the Garena Free Fire TH website. The user wants a modern, responsive design with accessibility and SEO in mind. Let me break down how I approached this.

First, I considered the project's requirements: modern design, responsiveness, TypeScript, accessibility, and clean architecture. Since this is a CSS file, I focused on styling aspects that align with these goals.

I started with CSS variables to ensure consistency across the design. Defining primary colors, gradients, and neutral colors helps maintain a cohesive look. Using a responsive font size for the root allows the typography to scale nicely on different devices.

Next, I set up global styles using a reset to remove default margins and padding, ensuring consistent styling across browsers. I chose 'system-ui' as the font stack for a modern look and better performance. The line-height and letter-spacing were adjusted for readability.

For the main navigation, I used a flexbox layout to make it responsive. Adding a shadow for depth and a gradient background ties into the overall color scheme. The navigation items are styled with hover effects for better user interaction, including a slight shadow and color change. The logo stands out with a white color and subtle shadow.

The hero section needed to be visually striking, so I used a full-viewport height with a gradient background. Centering the content both vertically and horizontally ensures it's the focal point on any device. The heading is large and has a gradient to match the color scheme, with a shadow for depth. The call-to-action button uses contrasting colors and a hover effect for interactivity.

Responsive design was a key consideration. I used media queries to adjust layouts for smaller screens. For example, the navigation switches to a column layout on mobile, and the hero content becomes centered with adjusted font sizes for better readability.

Accessibility was addressed by using semantic HTML elements, ensuring proper contrast ratios, and adding focus states for interactive elements. However, since this is the CSS file, I focused on styles that support accessibility, like hover effects and focus rings.

I incorporated modern CSS techniques like flexbox and gradients for a clean and efficient design. Animations were added with keyframes to provide smooth transitions, enhancing user experience without being overwhelming.

Finally, I made sure the code is clean and well-commented, allowing for easy maintenance. Cross-browser compatibility was considered by using vendor prefixes where necessary, though I kept it minimal to avoid clutter.

Overall, each decision was made to meet the user's requirements, ensuring the CSS is not only visually appealing but also functional, accessible, and performant.
</think>

```css
/* styles/main.css */
@charset "UTF-8";

/* CSS Variables */
:root {
  --primary-color: #FF4D4D;
  --primary-hover: #FF3333;
  --secondary-color: #00B4D8;
  --background-color: #1a1a1a;
  --text-color: #ffffff;
  --gradient: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
  --radius: 8px;
  --spacing: 1rem;
  --max-width: 1200px;
  --font-size: 100%;
  --line-height: 1.6;
  --transition: all 0.3s ease;
}

/* Reset and Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
  font-size: var(--font-size);
  line-height: var(--line-height);
}

body {
  font-family: 'Segoe UI', system-ui, sans-serif;
  color: var(--text-color);
  background-color: var(--background-color);
  direction: ltr;
}

/* Main Navigation */
.main-nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing) 0;
  background-color: rgba(26, 26, 26, 0.9);
  backdrop-filter: blur(10px);
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
}

.nav-container {
  max-width: var(--max-width);
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.nav-items {
  display: flex;
  gap: var(--spacing);
  list-style: none;
}

.nav-link {
  color: var(--text-color);
  text-decoration: none;
  padding: 0.5rem 1rem;
  border-radius: var(--radius);
  transition: var(--transition);
}

.nav-link:hover {
  background-color: rgba(255, 77, 77, 0.1);
  transform: translateY(-2px);
}

.nav-link:focus {
  outline: 2px solid var(--primary-color);
  box-shadow: 0 0 0 3px rgba(255, 77, 77, 0.2);
}

.logo {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--text-color);
  text-decoration: none;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

/* Hero Section */
.hero {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  background: var(--gradient);
  padding: 2rem;
}

.hero-content {
  max-width: 800px;
  margin: 0 auto;
}

.hero h1 {
  font-size: 3rem;
  margin-bottom: 1rem;
  background: linear-gradient(45deg, #fff, #e9d8fd);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
}

.hero p {
  font-size: 1.2rem;
  margin-bottom: 2rem;
  color: rgba(255, 255, 255, 0.9);
}

.cta-button {
  display: inline-block;
  padding: 1rem 2rem;
  background-color: var(--text-color);
  color: var(--primary-color);
  text-decoration: none;
  border-radius: var(--radius);
  transition: var(--transition);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.cta-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);
  background-color: rgba(255, 255, 255, 0.9);
}

/* Responsive Design */
@media (max-width: 768px) {
  .nav-items {
    flex-direction: column;
    gap: 1rem;
  }

  .hero h1 {
    font-size: 2rem;
  }

  .hero p {
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .hero {
    padding: 1rem;
  }

  .hero-content {
    padding: 0 1rem;
  }
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.5s ease forwards;
}

/* Accessibility */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.focusable {
  outline: none;
}

.focusable:focus {
  outline: 2px solid var(--primary-color);
  box-shadow: 0 0 0 3px rgba(255, 77, 77, 0.2);
}
```